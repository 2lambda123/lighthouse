/*
* @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
* or implied. See the License for the specific language governing
* permissions and limitations under the License.
*/
"use strict";window.LH_CURRENT_VERSION="7.2.0";var webtreemap=function(e){const t="webtreemap-node";function n(e){return e.classList.contains(t)}function r(e){let t=0,r=e;for(;r=r.previousElementSibling;)n(r)&&t++;return t}function o(e){let t=[],o=e;for(;o&&n(o);)t.unshift(r(o)),o=o.parentElement;return t.shift(),t}function i(e){return Math.round(e)+"px"}class s{constructor(e,t){this.node=e,this.options=function(e){const t={padding:e.padding||[14,3,3,3],spacing:e.spacing||0,lowerBound:void 0===e.lowerBound?.1:e.lowerBound,applyMutations:e.applyMutations||(()=>null),caption:e.caption||(e=>e.id||""),showNode:e.showNode||((e,n,r)=>n>20&&r>=t.padding[0]),showChildren:e.showChildren||((e,t,n)=>t>40&&n>40)};return t}(t)}ensureDOM(e){if(e.dom)return e.dom;const n=document.createElement("div");if(n.className=t,this.options.caption){const t=document.createElement("div");t.className="webtreemap-caption",t.innerText=this.options.caption(e),n.appendChild(t)}return e.dom=n,this.options.applyMutations(e),n}selectSpan(e,t,n){let r=e[n].size,o=r,i=0,s=0,a=n;for(;a<e.length;a++){const n=e[a].size;n<r&&(r=n),n>o&&(o=n);const d=i+n,l=Math.max(o*t*t/(d*d),d*d/(r*t*t));if(s&&l>s)break;s=l,i=d}return{end:a,sum:i}}layoutChildren(e,t,n,r){const o=e.size,s=e.children;if(!s)return;let a=-1,d=-1,l=n-1,c=r-1;const h=this.options.spacing,p=this.options.padding;d+=p[0],p[1]&&(l-=p[1]+1),c-=p[2],a+=p[3];let u=0;if(this.options.showChildren(e,l-a,c-d)){const n=Math.sqrt(o/((l-a)*(c-d)));var m=a,f=d;e:for(let r=0;r<s.length;){m=a;const d=n*(l-a),{end:c,sum:p}=this.selectSpan(s,d,r);if(p/o<this.options.lowerBound)break;const w=p/d,g=Math.round(w/n)+1;for(u=r;u<c;u++){const r=s[u],o=r.size/w,a=Math.round(o/n)+1;if(!this.options.showNode(r,a-h,g-h))break e;const d=null==r.dom,l=this.ensureDOM(r),c=l.style;c.left=i(m),c.width=i(a-h),c.top=i(f),c.height=i(g-h),d&&e.dom.appendChild(l),this.layoutChildren(r,t+1,a,g),m+=a-1}f+=g-1,r=c}}for(;u<s.length&&s[u].dom;u++)s[u].dom.parentNode.removeChild(s[u].dom),s[u].dom=void 0}render(e){const t=this.ensureDOM(this.node);t.onclick=e=>{let t=e.target;for(;!n(t);)if(t=t.parentElement,!t)return;let r=o(t);this.zoom(r)},e.appendChild(t),this.layout(this.node,e)}layout(e,t){const n=t.offsetWidth,r=t.offsetHeight;e.dom.style.width=n+"px",e.dom.style.height=r+"px",this.layoutChildren(this.node,0,n,r)}zoom(e){let t=this.node;const[n,r,o,s]=this.options.padding;let a=t.dom.offsetWidth,d=t.dom.offsetHeight;for(const l of e){if(a-=s+r,d-=n+o,!t.children)throw new Error("bad address");for(const e of t.children)e.dom&&(e.dom.style.zIndex="0");t=t.children[l];const e=t.dom.style;e.zIndex="1",e.left=i(s-1),e.width=i(a),e.top=i(n-1),e.height=i(d)}this.layoutChildren(t,0,a,d)}}return e.TreeMap=s,e.flatten=function e(t,n=((e,t)=>`${e}/${t}`)){if(t.children){for(const r of t.children)e(r,n);if(1===t.children.length){const e=t.children[0];t.id+="/"+e.id,t.children=e.children}}},e.getAddress=o,e.isDOMNode=n,e.render=function(e,t,n){new s(t,n).render(e)},e.rollup=function e(t){if(!t.children)return;let n=0;for(const r of t.children)e(r),n+=r.size;n>t.size&&(t.size=n)},e.sort=function e(t){if(t.children){for(const n of t.children)e(n);t.children.sort(((e,t)=>t.size-e.size))}},e.treeify=function(e){const t={size:0};for(const[n,r]of e){const e=n.replace(/\/$/,"").split("/");let o=t;for(;e.length>0;){const t=e.shift();o.children||(o.children=[]);let i=o.children.find((e=>e.id===t));if(i||(i={id:t,size:0},o.children.push(i)),0===e.length){if(0!==i.size)throw new Error(`duplicate path ${n} ${i.size}`);i.size=r}o=i}}return t},e}({});let treemapViewer;class TreemapViewer{constructor(e,t){const n=e.lhr.audits["script-treemap-data"].details;if(!n||!n.treemapData)throw new Error("missing script-treemap-data");const r=n.treemapData;this.depthOneNodesByGroup={scripts:r},this.nodeToDepthOneNodeMap=new WeakMap;for(const e of Object.values(this.depthOneNodesByGroup))for(const t of e)TreemapUtil.walk(t,(e=>this.nodeToDepthOneNodeMap.set(e,t)));this.currentTreemapRoot,this.documentUrl=e.lhr.requestedUrl,this.el=t,this.getHueForKey=TreemapUtil.stableHasher(TreemapUtil.COLOR_HUES),this.createHeader(),this.show(),this.initListeners()}createHeader(){const e=TreemapUtil.find("a.lh-header--url");e.textContent=this.documentUrl,e.href=this.documentUrl;const t=this.wrapNodesInNewRootNode(this.depthOneNodesByGroup.scripts).resourceBytes;TreemapUtil.find(".lh-header--size").textContent=TreemapUtil.formatBytes(t)}initListeners(){window.addEventListener("resize",(()=>{this.resize()}));const e=TreemapUtil.find(".lh-treemap");e.addEventListener("click",(e=>{if(!(e.target instanceof HTMLElement))return;e.target.closest(".webtreemap-node")&&this.updateColors()})),e.addEventListener("mouseover",(e=>{if(!(e.target instanceof HTMLElement))return;const t=e.target.closest(".webtreemap-node");t&&t.classList.add("webtreemap-node--hover")})),e.addEventListener("mouseout",(e=>{if(!(e.target instanceof HTMLElement))return;const t=e.target.closest(".webtreemap-node");t&&t.classList.remove("webtreemap-node--hover")}))}wrapNodesInNewRootNode(e){const t=[...e];return{name:this.documentUrl,resourceBytes:t.reduce(((e,t)=>t.resourceBytes+e),0),unusedBytes:t.reduce(((e,t)=>(t.unusedBytes||0)+e),0),children:t}}show(){const e=this.depthOneNodesByGroup.scripts;this.currentTreemapRoot=this.wrapNodesInNewRootNode(e),renderViewModeOptions(this.currentTreemapRoot.resourceBytes),TreemapUtil.walk(this.currentTreemapRoot,(e=>{delete e.dom,e.size=e.resourceBytes||0})),webtreemap.sort(this.currentTreemapRoot),this.el.innerHTML="",this.render()}render(){this.treemap=new webtreemap.TreeMap(this.currentTreemapRoot,{padding:[16,3,3,3],spacing:10,caption:e=>this.makeCaption(e)}),this.treemap.render(this.el),TreemapUtil.find(".webtreemap-node").classList.add("webtreemap-node--root"),this.updateColors()}resize(){if(!this.treemap)throw new Error("must call .render() first");this.treemap.layout(this.currentTreemapRoot,this.el),this.updateColors()}makeCaption(e){const t=e.resourceBytes,n=this.currentTreemapRoot.resourceBytes,r=[TreemapUtil.elide(e.name,60),`${TreemapUtil.formatBytes(t)} (${Math.round(t/n*100)}%)`];return e===this.currentTreemapRoot&&(r[1]="resource bytes: "+r[1]),r.join(" · ")}updateColors(){TreemapUtil.walk(this.currentTreemapRoot,(e=>{const t=this.nodeToDepthOneNodeMap.get(e),n=t?t.name:e.name,r=this.getHueForKey(n);let o="white",i="black";if(void 0!==r){const e=60,t=90;o=TreemapUtil.hsl(r,e,t),i=t>50?"black":"white"}const s=e.dom;s&&(s.style.backgroundColor=o,s.style.color=i)}))}}function renderViewModeOptions(e){const t=TreemapUtil.find(".lh-modes");t.innerHTML="",function(e,n){const r=TreemapUtil.createChildOf(t,"div","view-mode");r.classList.add("view-mode--active"),TreemapUtil.createChildOf(r,"span").textContent=e,TreemapUtil.createChildOf(r,"span","lh-text-dim").textContent=` (${TreemapUtil.formatBytes(n)})`,r.addEventListener("click",(()=>{treemapViewer.show()}))}("All",e)}function injectOptions(e){if(window.__treemapOptions)return;const t=document.createElement("script");t.textContent=`\n    window.__treemapOptions = ${JSON.stringify(e)};\n  `,document.head.append(t)}function init(e){treemapViewer=new TreemapViewer(e,TreemapUtil.find("div.lh-treemap")),injectOptions(e),console.log("window.__treemapOptions",window.__treemapOptions)}function showError(e){document.body.textContent=e}async function main(){if(window.__treemapOptions)init(window.__treemapOptions);else if(new URLSearchParams(window.location.search).has("debug")){const e=await fetch("debug.json");init(await e.json())}else window.addEventListener("message",(e=>{if(e.source!==self.opener)return;const t=e.data,{lhr:n}=t;if(!n)return showError("Error: Invalid options");if(!n.requestedUrl)return showError("Error: Invalid options");init(t)}));self.opener&&!self.opener.closed&&self.opener.postMessage({opened:!0},"*")}document.addEventListener("DOMContentLoaded",main);const KiB=1024,MiB=1048576;class TreemapUtil{static walk(e,t,n){if(n||(n=[]),n.push(e.name),t(e,n),e.children)for(const r of e.children)TreemapUtil.walk(r,t,[...n])}static pathsAreEqual(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}static pathIsSubpath(e,t){if(e.length>t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}static elide(e,t){return e.length<=t?e:e.slice(0,t-1)+"…"}static createElement(e,t,n={}){const r=document.createElement(e);return t&&(r.className=t),Object.keys(n).forEach((e=>{const t=n[e];void 0!==t&&r.setAttribute(e,t)})),r}static createChildOf(e,t,n,r){const o=this.createElement(t,n,r);return e.appendChild(o),o}static find(e,t=document){const n=t.querySelector(e);if(null===n)throw new Error(`query ${e} not found`);return n}static formatBytes(e){return e>=MiB?(e/MiB).toFixed(2)+" MiB":e>=KiB?(e/KiB).toFixed(0)+" KiB":e+" B"}static format(e,t){return"bytes"===t?TreemapUtil.formatBytes(e):"time"===t?e+" ms":`${e} ${t}`}static stableHasher(e){e=[...e];const t=new Map;return n=>{if(t.has(n))return t.get(n);if(0===e.length)return;const r=[...n].reduce(((e,t)=>e+t.charCodeAt(0)),0),[o]=e.splice(r%e.length,1);return t.set(n,o),o}}static hsl(e,t,n){return`hsl(${e}, ${t}%, ${n}%)`}}TreemapUtil.COLOR_HUES=[4.1,339.6,291.2,261.6,230.8,198.7,186.8,174.4,122.4,87.8,65.5,45,35.8,14.4,15.9,0,199.5],"undefined"!=typeof module&&module.exports&&(module.exports=TreemapUtil);