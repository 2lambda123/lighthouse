/*
* @license Copyright 2020 The Lighthouse Authors. All Rights Reserved.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
* or implied. See the License for the specific language governing
* permissions and limitations under the License.
*/
"use strict";window.LH_CURRENT_VERSION="6.5.0";var webtreemap=function(e){const t="webtreemap-",n=t+"node";function o(e){return e.classList.contains(n)}function i(e){let t=0,n=e;for(;n=n.previousElementSibling;)o(n)&&t++;return t}function s(e){let t=[],n=e;for(;n&&o(n);)t.unshift(i(n)),n=n.parentElement;return t.shift(),t}function r(e){return Math.round(e)+"px"}class d{constructor(e,t){this.node=e,this.options=function(e){const t={padding:e.padding||[14,3,3,3],spacing:e.spacing||0,lowerBound:void 0===e.lowerBound?.1:e.lowerBound,applyMutations:e.applyMutations||(()=>null),caption:e.caption||(e=>e.id||""),showNode:e.showNode||((e,n,o)=>n>20&&o>=t.padding[0]),showChildren:e.showChildren||((e,t,n)=>t>40&&n>40)};return t}(t)}ensureDOM(e){if(e.dom)return e.dom;const o=document.createElement("div");if(o.className=n,this.options.caption){const n=document.createElement("div");n.className=t+"caption",n.innerText=this.options.caption(e),o.appendChild(n)}return e.dom=o,this.options.applyMutations(e),o}selectSpan(e,t,n){let o=e[n].size,i=o,s=0,r=0,d=n;for(;d<e.length;d++){const n=e[d].size;n<o&&(o=n),n>i&&(i=n);const c=s+n,l=Math.max(i*t*t/(c*c),c*c/(o*t*t));if(r&&l>r)break;r=l,s=c}return{end:d,sum:s}}layoutChildren(e,t,n,o){const i=e.size,s=e.children;if(!s)return;let d=-1,c=-1,l=n-1,a=o-1;const h=this.options.spacing,p=this.options.padding;c+=p[0],p[1]&&(l-=p[1]+1),a-=p[2],d+=p[3];let f=0;if(this.options.showChildren(e,l-d,a-c)){const n=Math.sqrt(i/((l-d)*(a-c)));var u=d,m=c;e:for(let o=0;o<s.length;){u=d;const c=n*(l-d),{end:a,sum:p}=this.selectSpan(s,c,o);if(p/i<this.options.lowerBound)break;const w=p/c,g=Math.round(w/n)+1;for(f=o;f<a;f++){const o=s[f],i=o.size/w,d=Math.round(i/n)+1;if(!this.options.showNode(o,d-h,g-h))break e;const c=null==o.dom,l=this.ensureDOM(o),a=l.style;a.left=r(u),a.width=r(d-h),a.top=r(m),a.height=r(g-h),c&&e.dom.appendChild(l),this.layoutChildren(o,t+1,d,g),u+=d-1}m+=g-1,o=a}}for(;f<s.length&&s[f].dom;f++)s[f].dom.parentNode.removeChild(s[f].dom),s[f].dom=void 0}render(e){const t=this.ensureDOM(this.node);t.onclick=e=>{let t=e.target;for(;!o(t);)if(!(t=t.parentElement))return;let n=s(t);this.zoom(n)},e.appendChild(t),this.layout(this.node,e)}layout(e,t){const n=t.offsetWidth,o=t.offsetHeight;e.dom.style.width=`${n}px`,e.dom.style.height=`${o}px`,this.layoutChildren(this.node,0,n,o)}zoom(e){let t=this.node;const[n,o,i,s]=this.options.padding;let d=t.dom.offsetWidth,c=t.dom.offsetHeight;for(const l of e){if(d-=s+o,c-=n+i,!t.children)throw new Error("bad address");for(const e of t.children)e.dom&&(e.dom.style.zIndex="0");const e=(t=t.children[l]).dom.style;e.zIndex="1",e.left=r(s-1),e.width=r(d),e.top=r(n-1),e.height=r(c)}this.layoutChildren(t,0,d,c)}}return e.TreeMap=d,e.flatten=function e(t,n=((e,t)=>`${e}/${t}`)){if(t.children){for(const o of t.children)e(o,n);if(1===t.children.length){const e=t.children[0];t.id+="/"+e.id,t.children=e.children}}},e.getAddress=s,e.isDOMNode=o,e.render=function(e,t,n){new d(t,n).render(e)},e.rollup=function e(t){if(!t.children)return;let n=0;for(const o of t.children)e(o),n+=o.size;n>t.size&&(t.size=n)},e.sort=function e(t){if(t.children){for(const n of t.children)e(n);t.children.sort((e,t)=>t.size-e.size)}},e.treeify=function(e){const t={size:0};for(const[n,o]of e){const e=n.replace(/\/$/,"").split("/");let i=t;for(;e.length>0;){const t=e.shift();i.children||(i.children=[]);let s=i.children.find(e=>e.id===t);if(s||(s={id:t,size:0},i.children.push(s)),0===e.length){if(0!==s.size)throw new Error(`duplicate path ${n} ${s.size}`);s.size=o}i=s}}return t},e}({});function injectOptions(e){if(window.__treemapOptions)return;const t=document.createElement("script");t.textContent=`\n    window.__treemapOptions = ${JSON.stringify(e)};\n  `,document.head.append(t)}function init(e){TreemapUtil.find("main").textContent=JSON.stringify(e.lhr),console.log({webtreemap:webtreemap}),injectOptions(e),console.log("window.__treemapOptions",window.__treemapOptions)}function showError(e){document.body.textContent=e}async function main(){if(window.__treemapOptions)init(window.__treemapOptions);else if(new URLSearchParams(window.location.search).has("debug")){const e=await fetch("debug.json");init(await e.json())}else window.addEventListener("message",e=>{if(e.source!==self.opener)return;const t=e.data,{lhr:n}=t;return n&&n.requestedUrl?void init(t):showError("Error: Invalid options")});self.opener&&!self.opener.closed&&self.opener.postMessage({opened:!0},"*")}document.addEventListener("DOMContentLoaded",main);class TreemapUtil{static createElement(e,t,n={}){const o=document.createElement(e);return t&&(o.className=t),Object.keys(n).forEach(e=>{const t=n[e];void 0!==t&&o.setAttribute(e,t)}),o}static createChildOf(e,t,n,o){const i=this.createElement(t,n,o);return e.appendChild(i),i}static find(e,t=document){const n=t.querySelector(e);if(null===n)throw new Error(`query ${e} not found`);return n}}"undefined"!=typeof module&&module.exports&&(module.exports=TreemapUtil);